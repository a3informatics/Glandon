/*
* Links Panel
* 
*/

/**
* Links Panel Constructor
* @param url [String] The url to make the ajax call
* @param panelId [String] The id assigned to the panel
*
* @return [void]
*/
function LinksPanel(url, panelId) {
  // var _this = this;
  this.url = url;
  this.panelId = panelId;
  this.getData();
}

/**
 * Ajax Call
 *
 * @return [void]
 */
LinksPanel.prototype.getData = function () {
  var _this = this;
  $.ajax({
    url: _this.url,
    type: 'GET',
    dataType: 'json',
    contentType: 'application/json',
    success: function(result){ 
    console.log(result);       
    _this.display(result);
    },
    error: function(xhr,status,error){
      handleAjaxError (xhr, status, error);
    }
  }); 
}

/**
 * Display the result
 * @param result [String] The result obtained from Ajax call
 *
 * @return [void]
 */
LinksPanel.prototype.display = function (result) {
  var _this = this;
  for (var key in result) { //key is each synonym
    for (var key2 in result[key]) { // key2 is the content of each synonym
      var well = document.createElement("div");
      well.className = "well";
      var description = result[key][key2].description;
      
      for (var reference in result[key][key2].references ) {
      var show_path = result[key][key2].references[reference].show_path;
      var identifier = result[key][key2].references[reference].parent.identifier;
      var notation = result[key][key2].references[reference].parent.notation;
      well.innerHTML= '<strong><p id="description">'+ description +'</p></strong>'+
      '<ul class= "list-inline">'+
        '<li><strong>'+ identifier +'</strong></li>'+
        '<li><strong>'+ notation +'</strong></li>'+
        '<li><a href="'+show_path +'" class="btn btn-primary btn-xs" role="button"><i class="fa fa-arrow-circle-right fa-lg" aria-hidden="true"></i></a></li>'+
      '</ul>';
       document.getElementById("linkspanel").appendChild(well);
      }

      
      
     
    }
  }
}
