/*
* Managed Item Panel
* 
* Requires:
* managed_item_table [Table] the managed item table
*/

/**
 * ISO Managed List Panel Constructor
 *
 * @return [void]
 */
function HistoryPanel(url, count) {
  var _this = this;
  this.url = url;
  this.count = count;
	this.historyTable = $('#history').DataTable( {
    "order": [[ 0, "desc" ]],
    "columns": [
      {"render" : function (data, type, row, meta) {
        if (type == 'display') {
          return row.has_identifier.semantic_version;
        } else {
          return row.has_identifier.version;
        }}
      },
      {"data" : "has_state.by_authority.ra_namespace.short_name"},
      {"data" : "has_identifier.identifier"},
      {"data" : "label"},
      {"data" : "has_identifier.version_label"},
      {"render" : function (data, type, row, meta) {return _this.linkButton(row.show_path, "Show");}},
      {"render" : function (data, type, row, meta) {return _this.linkButton(row.view_path, "View");}},
      {"render" : function (data, type, row, meta) {return _this.linkButton(row.search_path, "Search");}},
      {"render" : function (data, type, row, meta) {return _this.linkButton(row.edit_path, "Edit");}},
      {"render" : function (data, type, row, meta) {return _this.linkButton(row.status_path, "Status");}},
      {"render" : function (data, type, row, meta) {return _this.deleteButton(row.delete_path, "Delete");}}
    ],
    "pageLength": pageLength, // Gloabl setting
    "lengthMenu": pageSettings, // Gloabl setting
    "processing": true,
    "language": {
      "infoFiltered": "",
      "emptyTable": "No changes.",
      "processing": "<div class=\"spinner-container\"><img class=\"spinner\" src='<%= asset_path('processing_medium_1.gif') %>'></div>"
    }
  });
  this.add(0);
}


/**
 * Add item to table
 *
 * @param [String] uri the uri of the item being added
 * @param [Integer] key a unique reference
 * @return [void]
 */
HistoryPanel.prototype.add = function (offset) {
  var _this = this;
  _this.historyTable.processing(true);
  $.ajax({
    url: _this.url,
    data: {"count": _this.count, "offset": offset},
    type: 'GET',
    dataType: 'json',
    success: function(result) {
    	for (i=0; i<result.data.length; i++) {
        var row = _this.historyTable.row.add(result.data[i]);
        if (result.data[i].current) {
          $(row).toggleClass('success');
        }
      }
      _this.historyTable.draw();
      if (result.count >= _this.count) {
        _this.add(result.offset + _this.count)
      } else {
        _this.historyTable.processing(false);
      }
    },
    error: function(xhr,status,error){
      handleAjaxError(xhr, status, error);
      _this.historyTable.processing(false);
    }
  });
}

HistoryPanel.prototype.linkButton = function (path, text) {
  if (path === "") {
    return "&nbsp;"
  } else {
    return '<a href="' + path + '" class="btn btn-primary btn-xs">' + text + '</a>';
  }
}

HistoryPanel.prototype.deleteButton = function (path, text) {
  if (path === "") {
    return "&nbsp;"
  } else {
    return '<a href="' + path + '" class="btn btn-danger btn-xs" data-confirm="Are you sure?" data-method="delete">' + text + '</a>';
  }
}