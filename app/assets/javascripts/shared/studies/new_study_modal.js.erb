/*
* New Study Modal
* Picks up the values entered by user and posts them to server.
*/


/**
* New Study Modal Constructor
*/
function NewStudyModal() {
  this.modal = $("#new-study-modal");
  this.url = studyCreateUrl;
  this.errorDiv = this.modal.find(".errors");
  this.submitButton = this.modal.find("#create-study-button");

  this.setListeners();
}

/**
 * Sets event listeners and handlers
 *
 * @return [void]
 */
NewStudyModal.prototype.setListeners = function() {
  this.submitButton.on("click", this.submitData.bind(this));
};

/**
 * Ajax post
 *
 * @return [void]
 */
NewStudyModal.prototype.submitData = function() {

  if (!this.validate())
    return;
  
  this.loading(true);

  $.ajax({
    url: this.url,
    type: "POST",
    data: this.getData(),
    context: this,
    success: function(result){
      location.href = result.history_url;
    },
    error: function(xhr,status,error){
      this.loading(false);
      handleAjaxError(xhr, status, error, this.errorDiv);
    }
  });
};


/**
 * Collects the data from inputs, formats it
 *
 * @return [Object] formatted request data
 */
NewStudyModal.prototype.getData = function() {
  var inputFields = this.modal.find("input, textarea");
  // var inputFields = this.modal.find("input, select option:selected, textarea");
  var data = {study: {}};

  inputFields.each(function () {
    var dataKey = $(this).attr("name") || $(this).parent().attr("name");
    data.study[dataKey] = $(this).val().trim();
  });

  return data;
};

/**
 * Validates all inputs filled out. Shows error
 *
 * @return [Boolean] validation passed / failed
 */
NewStudyModal.prototype.validate = function() {
  var inputFields = this.modal.find("input, select option:selected, textarea");
  var missingFields = [];

  inputFields.each(function () {
    if ($(this).val() == "") {
      var dataKey = $(this).attr("name") || $(this).parent().attr("name");
      missingFields.push(dataKey);
    }
  });

  if (missingFields.length > 0) {
    displayAlertsInElement(alertError("The following fields are empty: " + missingFields.join(', ')), this.errorDiv);
    return false;
  }
  return true;
};

/**
 * Enables / disables loading state of modal
 *
 * @param enable [Boolean] enable/disable loading ~ true/false
 * @return [void]
 */
NewStudyModal.prototype.loading = function(enable) {
  if (enable) {
    this.submitButton.addClass("disabled");
    this.submitButton.text("Processing...");
  }
  else {
    this.submitButton.removeClass("disabled");
    this.submitButton.text("Submit");
  }
};
