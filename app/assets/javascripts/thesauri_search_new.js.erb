var tsCallBack = null; // Callback function

$(document).ready( function() {

  $("#notepad_adding").prop("disabled", true);
  
  var id = document.getElementById("thesaurus_id");
  var namespace = document.getElementById("thesaurus_namespace");
  var counter = document.getElementById("notepadAdd")
  var currentRef;
  var currentRow;
  var columns;

  currentRef = null;
  currentRow = null;
	columns = [
    {"data" : "parentIdentifier", "width" : "10%"},
    {"data" : "identifier", "width" : "10%"},
    {"data" : "notation", "width" : "10%"},
    {"data" : "preferredTerm", "width" : "15%" },
    {"data" : "synonym", "width" : "15%" },
    {"data" : "definition", "width" : "40%"}
  ];

  var searchTable = $('#searchTable').DataTable( {
    "ajax": {
      "url": "/thesauri/search_results",
      "data": function( d ) {
        d.id = id.value,
        d.namespace = namespace.value
      },
    "dataSrc": "data" 
    },
    "processing": true,
    "serverSide": true,
    "language": {
      "infoFiltered": "",
      "processing": "<img src='<%= asset_path('processing.gif') %>'>"
    },
    "pageLength": pageLength,
    "lengthMenu": pageSettings,
    "columns": columns
  });

  // Setup - add a text input to each footer cell
  $('#searchTable tfoot th').each( function () {
    var title = $(this).text();
    var id = "searchTable_csearch_" + title.toLowerCase();
    if (title == "Extensible") {
      // Do nothing
    } else if (title == "Definition") {
      $(this).html( '<input id="' + id + '" type="text" class="form-control" size="20" placeholder="Search ..." />' );
    } else {
      $(this).html( '<input id="' + id + '" type="text" class="form-control" size="10" placeholder="Search ..." />' );
    }
  });

  // Apply the column search. Fires on return or field empty assuming not the
  // current search value (i.e. something has changed).
  searchTable.columns().every( function () {
    var that = this;
    $( 'input', this.footer() ).on( 'keyup', function (e) {
      if (e.which == 13 || this.value == "") {
        if (that.search() !== this.value) {
          that.search(this.value).draw();
        }
      }
    });
  });

  // Apply the overall search. Fires on return or field empty assuming not the
  // current search value (i.e. something has changed).
  $("#searchTable_filter input")
    .unbind() // Unbind previous default bindings
    .bind("keyup", function(e) { // Bind our desired behavior
      if(this.value == "" || e.keyCode == 13) {
        if (searchTable.search() !== this.value) {
          searchTable.search(this.value).draw();
        }
      }
      return;
    });

  // Handle click on terminology table
  $('#searchTable tbody').on('click', 'tr', function () {
    if (currentRef != null) {
      $(currentRef).toggleClass('success');
    }
    $(this).toggleClass('success');
    // Get the row
    var row = searchTable.row(this).index();
    var data = searchTable.row(row).data();
    // Save the selection
    currentRef = this;
    currentRow = row;
  });

  // Add to the notepad
  $('#notepadAdd').click(function() {
    if (currentRef != null) {
      var row = searchTable.row(currentRef).index();
      var data = searchTable.row(row).data();
      spAddSpinner("#notepad_adding");
      $.ajax({
        url: "/notepads/create_term",
        type: 'POST',
        data: { "notepad": {"item_id": data.id, "item_ns": data.namespace }},
        success: function(result){
          spRemoveSpinner("#notepad_adding");
          var count = result['count'];
          tsUpdate(count);
          if (tsCallBack != null) {
            tsCallBack();
          }
        },
        error: function(xhr, status, error){
          spRemoveSpinner("#notepad_adding");
          handleAjaxError(xhr, status, error);
        }
      });
    } else {
      displayWarning("You need to select an item.");
    }
  });

});

function tsInit(callback) {
  tsCallBack = callback;
}

function tsUpdate(count) {
  $("#notepadAdd").html('Notepad+ <span class="badge">' + count + '</span>');
}