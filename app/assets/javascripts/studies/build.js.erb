$(document).ready(function() {
  new StudyBuild();
});

/*
* Study Build
*
* Only in Study Build page
*/

/**
 * Study Build Constructor
 *
 * @return [void]
 */
function StudyBuild() {
  this.initTabs();
  this.setListeners();

  // Start with a default tab opened
  setTimeout(function() { this.tabs.content.header.click() }.bind(this), 5);
}

/**
 * Initializes all tab handlers
 *
 * @return [void]
 */
StudyBuild.prototype.initTabs = function() {
  var studyContent = new VerticalList("#study-content-table", protocolShowUrl);
  var studyMatrix = new StudyMatrix();
  var studySchedule = new StudySchedule();
  var studyDesign = (studyEmpty ? new StudyDesign() : null);
  var studyObjectives = new StudyObjectives();

  this.tabs = {
    content: {instance: studyContent, header: $("#tab-content"), enabled: true},
    timeline: {instance: studyMatrix, header: $("#tab-timeline"), enabled: true},
    soa: {instance: studySchedule, header: $("#tab-soa"), enabled: true},
    design: {instance: studyDesign, header: $("#tab-design"), enabled: studyEmpty},
    objectives: {instance: studyObjectives, header: $("#tab-objetives"), enabled: true},
  }

  this.tabs.design.header.toggleClass("disabled perm-disabled", !this.tabs.design.enabled);
}

/**
 * Sets event listeners, handlers
 *
 * @return [void]
 */
StudyBuild.prototype.setListeners = function() {
  $("#study-build-tabs .tab-option").on("switch", this.onTabSwitch.bind(this));
}

/**
 * Tab switch handler
 *
 * @param e [Event] click event
 * @param tabId [String] id of the clicked-on tab
 * @return [void]
 */
StudyBuild.prototype.onTabSwitch = function(e, tabId) {
  var tabName = tabId.split('-')[1];
  if (this.tabs[tabName].enabled)
    this.tabs[tabName].instance.show();
}
