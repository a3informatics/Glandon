---
:parameters:
  - 
    :name: "Terminology"
    :description: "The terminology for which the export is required."
    :type: :thesauri
:columns:
  :clln:
    :label: CODELIST_LONG_NAME
    :type: literal
  :clsn:
    :label: CODELIST_SHORT_NAME
    :type: literal
  :cle:
    :label: CODELIST_EXTENSIBLE
    :type: literal
  :cld:
    :label: CODELIST_DEFINITION
    :type: literal
  :clc:
    :label: CODELIST_CODE
    :type: literal
  :code:
    :label: CODE
    :type: literal
  :svalue:
    :label: SUBMISSION_VALUE
    :type: literal
  :decode:
    :label: DECODE
    :type: literal
  :synonym:
    :label: SYNONYM
    :type: literal
  :synonym_sponsor:
    :label: SYNONYM_SPONSOR
    :type: literal
  :clid:
    :label: CODE_DEFINITION
    :type: literal
  :cldt:
    :label: DATA_TYPE
    :type: literal
  :crfdv:
    :label: CRF_DISPLAY_VALUE
    :type: literal
  :displayorder:
    :label: DISPLAY_ORDER
    :type: literal
  :rank:
    :label: RANK
    :type: literal
  :dc_stage:
    :label: DC_STAGE
    :type: literal
  :sdtm_stage:
    :label: SDTM_STAGE
    :type: literal
  :adam_stage:
    :label: ADAM_STAGE
    :type: literal
  :ed_use:
    :label: ED_USE
    :type: literal
:label: Sponsor CT Export
:query: 'PREFIX th: <http://www.assero.co.uk/Thesaurus#>
PREFIX isoI: <http://www.assero.co.uk/ISO11179Identification#> 
PREFIX isoR: <http://www.assero.co.uk/ISO11179Registration#> 
PREFIX isoC: <http://www.assero.co.uk/ISO11179Concepts#> 
PREFIX isoT: <http://www.assero.co.uk/ISO11179Types#> 
PREFIX bo: <http://www.assero.co.uk/BusinessOperational#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> 
  
SELECT ?clln ?clc ?clsn ?cle ?cld ?clid ?cldt ?code ?decode ?svalue (GROUP_CONCAT(DISTINCT ?clisyn;separator="; ") as ?synonym) ?synonym_sponsor ?crfdv ?displayorder ?rank ?dc_stage ?sdtm_stage ?adam_stage ?ed_use WHERE  
{
  {
    SELECT ?clln ?clc ?clsn ?cle ?cld ?clid ?cldt ?code ?decode ?svalue ?clisyn ?synonym_sponsor ?crfdv ?displayorder ?rank ?dc_stage ?sdtm_stage ?adam_stage ?ed_use WHERE  
    {
      VALUES ?s {[[[parameter_1]]]}
      ?s th:isTopConceptReference/bo:reference ?cl .
      FILTER (NOT EXISTS {?cl th:isOrdered ?x})
      ?cl th:identifier ?clc .  
      ?cl th:notation ?clsn .
      ?cl th:extensible ?cle .
      ?cl th:definition ?cld .
      ?cl th:preferredTerm/isoC:label ?clln .
      
      {
        FILTER (EXISTS {?cl ^th:pairedWith ?y})
        ?cl th:narrower ?cli .
        ?cli th:definition ?clid .
        ?cl ^th:pairedWith ?clp .
        ?clp th:narrower ?clpi .
        ?clpi th:definition ?clid .
        ?clpi th:identifier ?code .  
      } 
      UNION 
      {
        FILTER (EXISTS {?cl th:pairedWith ?y})
        ?cl th:narrower ?cli .
        ?cli th:definition ?clid .
        ?cli th:identifier ?code .  
      }
      UNION
      {
        FILTER (NOT EXISTS {?cl th:pairedWith ?y} && NOT EXISTS {?cl ^th:pairedWith ?z})
        ?cl th:narrower ?cli .
        ?cli th:definition ?clid .
        ?cli th:identifier ?code .  
      }

      ?cli th:preferredTerm/isoC:label ?decode .
      ?cli th:notation ?svalue .
      BIND (IF(regex(?svalue, "^-?[0-9]+$"), "integer", "text") as ?cldt) 

      ?cli ^isoC:appliesTo ?ext1 .
      ?ext1 isoC:context ?cl . 
      ?ext1 isoC:customPropertyDefinedBy/isoC:label "SDTM Stage" .
      ?ext1 isoC:value ?sdtm_stage .
      
      ?cli ^isoC:appliesTo ?ext2 .
      ?ext2 isoC:context ?cl . 
      ?ext2 isoC:customPropertyDefinedBy/isoC:label "DC Stage" .
      ?ext2 isoC:value ?dc_stage .
      
      ?cli ^isoC:appliesTo ?ext3 .
      ?ext3 isoC:context ?cl . 
      ?ext3 isoC:customPropertyDefinedBy/isoC:label "ADaM Stage" .
      ?ext3 isoC:value ?adam_stage .
      
      ?cli ^isoC:appliesTo ?ext4 .
      ?ext4 isoC:context ?cl . 
      ?ext4 isoC:customPropertyDefinedBy/isoC:label "CRF Display Value" .
      ?ext4 isoC:value ?crfdv .
      
      ?cli ^isoC:appliesTo ?ext5 .
      ?ext5 isoC:context ?cl . 
      ?ext5 isoC:customPropertyDefinedBy/isoC:label "Display Order" .
      ?ext5 isoC:value ?displayorder .

      ?cli ^isoC:appliesTo ?ext6 .
      ?ext6 isoC:context ?cl . 
      ?ext6 isoC:customPropertyDefinedBy/isoC:label "Synonym Sponsor" .
      ?ext6 isoC:value ?synonym_sponsor .   

      ?cli th:preferredTerm/isoC:label ?pt .
      BIND (IF(STRENDS(?clsn, "TESTCD"), true, false) as ?testcd)
      BIND (IF(?testcd, ?pt, "") AS ?decode1)
      BIND (IF(?testcd = false && ?svalue = ?crfdv && ?dc_stage = "true", ?pt, ?crfdv) AS ?decode2)
      BIND (IF(?testcd = false && ?svalue = ?crfdv && ?dc_stage = "false", ?pt, ?pt) AS ?decode3)
      { BIND (?decode1 as ?decode) } UNION { BIND (?decode2 as ?decode) } UNION { BIND (?decode3 as ?decode) }

      OPTIONAL
      {
        ?cli ^isoC:appliesTo ?ext7 .
        ?ext7 isoC:context ?cl . 
        ?ext7 isoC:customPropertyDefinedBy/isoC:label "ED Use" .
        ?ext7 isoC:value ?ed_use .   
      }

      OPTIONAL {?cli th:synonym/isoC:label ?clisyn .}
      OPTIONAL 
      {
        ?cli ^(th:item) ?rank_member . 
        FILTER (EXISTS {?cl th:isRanked/th:members/th:memberNext* ?rank_member })  
        ?rank_member th:rank ?rank 
      }
    } ORDER BY ?cl ?cli ?clisyn
  }
  UNION
  {
    {
      SELECT ?cl ?cli ?clisyn (COUNT(?mid) as ?displayorder) WHERE 
      {
        VALUES ?s {[[[parameter_1]]]}
        ?s th:isTopConceptReference/bo:reference ?cl .
        ?cl th:isOrdered/th:members/th:memberNext* ?mid . 
        ?mid th:memberNext* ?m .
        ?m th:item ?cli .
        OPTIONAL {?cli th:synonym/isoC:label ?clisyn}
      } GROUP BY ?cl ?cli ?clisyn ORDER BY ?cl ?cli ?clisyn
    }
    ?cl th:subsets ?clp .
    ?clp th:identifier ?clc .  
    ?cl th:notation ?clsn .
    ?cl th:extensible ?cle .
    ?cl th:definition ?cld .
    ?cl th:preferredTerm/isoC:label ?clln .
    ?cli th:identifier ?code .  
    ?cli th:notation ?svalue .
    BIND (IF(regex(?svalue, "^-?[0-9]+$"), "integer", "text") as ?cldt) 
    ?cli th:definition ?clid .

    ?cli ^isoC:appliesTo ?ext1 .
    ?ext1 isoC:context ?cl . 
    ?ext1 isoC:customPropertyDefinedBy/isoC:label "SDTM Stage" .
    ?ext1 isoC:value ?sdtm_stage .

    ?cli ^isoC:appliesTo ?ext2 .
    ?ext2 isoC:context ?cl . 
    ?ext2 isoC:customPropertyDefinedBy/isoC:label "DC Stage" .
    ?ext2 isoC:value ?dc_stage .

    ?cli ^isoC:appliesTo ?ext3 .
    ?ext3 isoC:context ?cl . 
    ?ext3 isoC:customPropertyDefinedBy/isoC:label "ADaM Stage" .
    ?ext3 isoC:value ?adam_stage .

    ?cli ^isoC:appliesTo ?ext4 .
    ?ext4 isoC:context ?cl . 
    ?ext4 isoC:customPropertyDefinedBy/isoC:label "CRF Display Value" .
    ?ext4 isoC:value ?crfdv .

    ?cli ^isoC:appliesTo ?ext6 .
    ?ext6 isoC:context ?cl . 
    ?ext6 isoC:customPropertyDefinedBy/isoC:label "Synonym Sponsor" .
    ?ext6 isoC:value ?synonym_sponsor .   

    ?cli th:preferredTerm/isoC:label ?pt .
    BIND (IF(STRENDS(?clsn, "TESTCD"), true, false) as ?testcd)
    BIND (IF(?testcd, ?pt, "") AS ?decode1)
    BIND (IF(?testcd = false && ?svalue = ?crfdv && ?dc_stage = "true", ?pt, ?crfdv) AS ?decode2)
    BIND (IF(?testcd = false && ?svalue = ?crfdv && ?dc_stage = "false", ?pt, ?pt) AS ?decode3)
    { BIND (?decode1 as ?decode) } UNION { BIND (?decode2 as ?decode) } UNION { BIND (?decode3 as ?decode) }
    
    OPTIONAL
    {
      ?cli ^isoC:appliesTo ?ext7 .
      ?ext7 isoC:context ?cl . 
      ?ext7 isoC:customPropertyDefinedBy/isoC:label "ED Use" .
      ?ext7 isoC:value ?ed_use .   
    }

    OPTIONAL 
    {
      ?cli ^(th:item) ?rank_member . 
      FILTER (EXISTS {?cl th:isRanked/th:members/th:memberNext* ?rank_member })  
      ?rank_member th:rank ?rank 
    }
  }
} GROUP BY ?clln ?clc ?clsn ?cle ?cld ?clid ?cldt ?code ?decode ?svalue ?synonym_sponsor ?crfdv ?displayorder ?rank ?dc_stage ?sdtm_stage ?adam_stage ?ed_use ORDER BY ?clc ?code ?displayorder ?rank'
:type: Ad Hoc Report Definition